apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube-data
  namespace: kube-ops
spec:
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteMany
  glusterfs:
    endpoints: "gluster-cluster"
    path: "sonarqube-data"
    readOnly: false

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sonarqube-data
  namespace: kube-ops
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: kube-ops
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: sonarqube
        image: sonarqube:6.7
        ports:
        - containerPort: 9000
        env:
        - name: SONARQUBE_JDBC_USERNAME
          value: "sonar"
        - name: SONARQUBE_JDBC_PASSWORD
          value: "sonar"
        - name: SONARQUBE_JDBC_URL
          value: "jdbc:mysql://sonar-mysql:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance&useSSL=false"
        - name: TZ
          value: Asia/Shanghai

        volumeMounts:
        - mountPath: /opt/sonarqube/conf
          name: data
          subPath: conf
        - mountPath: /opt/sonarqube/data
          name: data
          subPath: data
        - mountPath: /opt/sonarqube/extensions
          name: data
          subPath: extensions
        - name: tz-config
          mountPath: /etc/localtime

      securityContext:
        runAsUser: 0
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: sonarqube-data
      - name: tz-config
        hostPath:
          path: /usr/share/zoneinfo/Asia/Shanghai

---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: kube-ops
  labels:
    app: sonarqube
spec:
  ports:
    - name: sonarqube
      port: 9000
      targetPort: 9000
      protocol: TCP
  selector:
    app: sonarqube

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  name: sonarqube-ingress
  namespace: kube-ops
spec:
  rules:
  - host: sonarqube.cloudnative.ies.inventec
    http:
      paths:
      - backend:
          serviceName: sonarqube
          servicePort: 9000
