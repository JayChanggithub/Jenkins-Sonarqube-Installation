apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-data
  namespace: kube-ops
spec:
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteMany
  glusterfs:
    endpoints: "gluster-cluster"
    path: "postgres-data"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-data
  namespace: kube-ops
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Gi

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sonar-mysql-deployment
  namespace: kube-ops
  labels:
    app: sonar-mysql-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: sonar-mysql-deployment
    spec:
      containers:
      - image: mysql:5.7
        name: sonar-mysql-deployment
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: sonar
        - name: MYSQL_USER
          value: sonar
        - name: MYSQL_PASSWORD
          value: sonar
        volumeMounts:
         - name: data
           mountPath: /var/lib/mysql
         - name: tz-config
           mountPath: /etc/localtime
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
        - name: data
          persistentVolumeClaim:
            claimName: mysql-data
---

apiVersion: v1
kind: Service
metadata:
  name: sonar-mysql
  namespace: kube-ops
  labels:
    name: sonar-mysql
spec:
  clusterIP: None
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: sonar-mysql-deployment